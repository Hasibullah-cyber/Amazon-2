// runtime can't be in strict mode because a global variable is assign and maybe created.
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/layout-lib_a"],{

/***/ "(app-pages-browser)/./lib/admin-auth.ts":
/*!***************************!*\
  !*** ./lib/admin-auth.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adminAuthManager: () => (/* binding */ adminAuthManager),\n/* harmony export */   initializeDefaultAdmin: () => (/* binding */ initializeDefaultAdmin)\n/* harmony export */ });\n/* harmony import */ var _database__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./database */ \"(app-pages-browser)/./lib/database.ts\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bcryptjs */ \"(app-pages-browser)/./node_modules/.pnpm/bcryptjs@3.0.2/node_modules/bcryptjs/index.js\");\n\n\n// Initialize default admin user if none exists\nasync function initializeDefaultAdmin() {\n    try {\n        const result = await (0,_database__WEBPACK_IMPORTED_MODULE_0__.executeQuery)('SELECT COUNT(*) as count FROM admin_users');\n        const adminCount = parseInt(result.rows[0].count);\n        if (adminCount === 0) {\n            const defaultPassword = 'admin123' // Change this in production\n            ;\n            const hashedPassword = await bcryptjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].hash(defaultPassword, 10);\n            await (0,_database__WEBPACK_IMPORTED_MODULE_0__.executeQuery)(\"\\n        INSERT INTO admin_users (username, email, password_hash, role, is_active)\\n        VALUES ($1, $2, $3, $4, $5)\\n      \", [\n                'admin',\n                'admin@hasibshop.com',\n                hashedPassword,\n                'admin',\n                true\n            ]);\n            console.log('Default admin user created: admin/admin123');\n        }\n    } catch (error) {\n        console.error('Error initializing default admin:', error);\n    }\n}\nclass AdminAuthManager {\n    loadAdminFromStorage() {\n        if (true) {\n            const adminData = localStorage.getItem('hasib_shop_admin');\n            if (adminData) {\n                this.currentAdmin = JSON.parse(adminData);\n            }\n        }\n    }\n    saveAdminToStorage(admin) {\n        if (true) {\n            localStorage.setItem('hasib_shop_admin', JSON.stringify(admin));\n        }\n    }\n    removeAdminFromStorage() {\n        if (true) {\n            localStorage.removeItem('hasib_shop_admin');\n        }\n    }\n    notifyListeners() {\n        const state = {\n            admin: this.currentAdmin,\n            isAdminAuthenticated: !!this.currentAdmin\n        };\n        this.listeners.forEach((listener)=>listener(state));\n    }\n    subscribe(listener) {\n        this.listeners.push(listener);\n        listener({\n            admin: this.currentAdmin,\n            isAdminAuthenticated: !!this.currentAdmin\n        });\n        return ()=>{\n            this.listeners = this.listeners.filter((l)=>l !== listener);\n        };\n    }\n    async adminSignIn(username, password) {\n        try {\n            if (username === this.ADMIN_CREDENTIALS.username && password === this.ADMIN_CREDENTIALS.password) {\n                const adminUser = {\n                    username,\n                    password: '',\n                    role: 'admin'\n                };\n                this.currentAdmin = adminUser;\n                this.saveAdminToStorage(adminUser);\n                this.notifyListeners();\n                return {\n                    success: true\n                };\n            } else {\n                return {\n                    success: false,\n                    error: 'Invalid admin credentials'\n                };\n            }\n        } catch (error) {\n            return {\n                success: false,\n                error: 'Failed to sign in as admin'\n            };\n        }\n    }\n    adminSignOut() {\n        this.currentAdmin = null;\n        this.removeAdminFromStorage();\n        this.notifyListeners();\n    }\n    getCurrentAdmin() {\n        return this.currentAdmin;\n    }\n    getAdminAuthState() {\n        return {\n            admin: this.currentAdmin,\n            isAdminAuthenticated: !!this.currentAdmin\n        };\n    }\n    constructor(){\n        this.listeners = [];\n        this.currentAdmin = null;\n        this.ADMIN_CREDENTIALS = {\n            username: 'admin_hasib',\n            password: 'hasib334'\n        };\n        this.loadAdminFromStorage();\n    }\n}\nconst adminAuthManager = new AdminAuthManager();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/admin-auth.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/auth.ts":
/*!*********************!*\
  !*** ./lib/auth.ts ***!
  \*********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authManager: () => (/* binding */ authManager)\n/* harmony export */ });\nclass AuthManager {\n    loadUserFromStorage() {\n        if (true) {\n            const userData = localStorage.getItem('hasib_shop_user');\n            if (userData) {\n                this.currentUser = JSON.parse(userData);\n            }\n        }\n    }\n    saveUserToStorage(user) {\n        if (true) {\n            localStorage.setItem('hasib_shop_user', JSON.stringify(user));\n        }\n    }\n    removeUserFromStorage() {\n        if (true) {\n            localStorage.removeItem('hasib_shop_user');\n        }\n    }\n    notifyListeners() {\n        const state = {\n            user: this.currentUser,\n            isAuthenticated: !!this.currentUser\n        };\n        this.listeners.forEach((listener)=>listener(state));\n    }\n    // Save user to database\n    async saveUserToDatabase(user) {\n        try {\n            const response = await fetch('/api/users', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(user)\n            });\n            if (response.ok) {\n                console.log('User saved to database successfully');\n                return true;\n            } else {\n                console.error('Failed to save user to database');\n                return false;\n            }\n        } catch (error) {\n            console.error('Error saving user to database:', error);\n            return false;\n        }\n    }\n    // Check if user exists in database\n    async checkUserInDatabase(email) {\n        try {\n            const response = await fetch(\"/api/users?email=\".concat(encodeURIComponent(email)));\n            if (response.ok) {\n                const data = await response.json();\n                return data.user || null;\n            }\n        } catch (error) {\n            console.error('Error checking user in database:', error);\n        }\n        return null;\n    }\n    subscribe(listener) {\n        this.listeners.push(listener);\n        // Immediately call with current state\n        listener({\n            user: this.currentUser,\n            isAuthenticated: !!this.currentUser\n        });\n        return ()=>{\n            this.listeners = this.listeners.filter((l)=>l !== listener);\n        };\n    }\n    async signUp(email, password, name) {\n        try {\n            console.log('Attempting sign up for:', email);\n            // Check if user already exists in database\n            const existingUser = await this.checkUserInDatabase(email);\n            if (existingUser) {\n                console.log('Email already exists in database');\n                return {\n                    success: false,\n                    error: 'Email already registered'\n                };\n            }\n            // Check localStorage as fallback\n            const existingUsers = this.getAllUsers();\n            if (existingUsers.find((u)=>u.email === email)) {\n                console.log('Email already exists in localStorage');\n                return {\n                    success: false,\n                    error: 'Email already registered'\n                };\n            }\n            // Create new user\n            const newUser = {\n                id: Date.now().toString(),\n                email,\n                name,\n                createdAt: new Date().toISOString(),\n                orders: []\n            };\n            console.log('Creating new user:', newUser);\n            // Save to database first\n            const dbSuccess = await this.saveUserToDatabase(newUser);\n            // Save to localStorage as backup\n            const users = [\n                ...existingUsers,\n                newUser\n            ];\n            if (true) {\n                localStorage.setItem('hasib_shop_users', JSON.stringify(users));\n                console.log('Saved users to localStorage');\n            }\n            // Sign in the user\n            this.currentUser = newUser;\n            this.saveUserToStorage(newUser);\n            this.notifyListeners();\n            console.log('User signed up and signed in successfully');\n            return {\n                success: true\n            };\n        } catch (error) {\n            console.error('Sign up error:', error);\n            return {\n                success: false,\n                error: 'Failed to create account'\n            };\n        }\n    }\n    async signIn(email, password) {\n        try {\n            console.log('Attempting sign in for:', email);\n            // First check database\n            let user = await this.checkUserInDatabase(email);\n            // Fallback to localStorage\n            if (!user) {\n                const users = this.getAllUsers();\n                user = users.find((u)=>u.email === email) || null;\n            }\n            if (!user) {\n                console.log('User not found');\n                return {\n                    success: false,\n                    error: 'Invalid email or password'\n                };\n            }\n            console.log('User found, signing in...');\n            // In a real app, you'd verify the password hash here\n            // For demo purposes, we'll just sign them in\n            this.currentUser = user;\n            this.saveUserToStorage(user);\n            this.notifyListeners();\n            return {\n                success: true\n            };\n        } catch (error) {\n            console.error('Sign in error:', error);\n            return {\n                success: false,\n                error: 'Failed to sign in'\n            };\n        }\n    }\n    signOut() {\n        this.currentUser = null;\n        this.removeUserFromStorage();\n        this.notifyListeners();\n    }\n    getCurrentUser() {\n        return this.currentUser;\n    }\n    getAllUsers() {\n        if (true) {\n            const usersData = localStorage.getItem('hasib_shop_users');\n            return usersData ? JSON.parse(usersData) : [];\n        }\n        return [];\n    }\n    getAuthState() {\n        return {\n            user: this.currentUser,\n            isAuthenticated: !!this.currentUser\n        };\n    }\n    constructor(){\n        this.listeners = [];\n        this.currentUser = null;\n        if (true) {\n            // Load user from localStorage on initialization\n            this.loadUserFromStorage();\n        }\n    }\n}\nconst authManager = new AuthManager();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/auth.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/database.ts":
/*!*************************!*\
  !*** ./lib/database.ts ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   executeQuery: () => (/* binding */ executeQuery),\n/* harmony export */   initializeDatabase: () => (/* binding */ initializeDatabase),\n/* harmony export */   pool: () => (/* binding */ pool),\n/* harmony export */   testDatabaseConnection: () => (/* binding */ testDatabaseConnection),\n/* harmony export */   updateOrderStatus: () => (/* binding */ updateOrderStatus)\n/* harmony export */ });\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pg */ \"(app-pages-browser)/./node_modules/.pnpm/pg@8.16.2/node_modules/pg/esm/index.mjs\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.2.4_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/build/polyfills/process.js\");\n\n// Create connection pool\nconst pool = new pg__WEBPACK_IMPORTED_MODULE_0__.Pool({\n    connectionString: process.env.DATABASE_URL,\n    ssl:  false ? 0 : false,\n    max: 20,\n    idleTimeoutMillis: 30000,\n    connectionTimeoutMillis: 2000\n});\n// Test database connection\nasync function testDatabaseConnection() {\n    try {\n        const client = await pool.connect();\n        const result = await client.query('SELECT NOW()');\n        client.release();\n        console.log('Database connected successfully:', result.rows[0]);\n        return true;\n    } catch (error) {\n        console.error('Database connection failed:', error);\n        return false;\n    }\n}\n// Initialize database tables with full schema\nasync function initializeDatabase() {\n    // Check if DATABASE_URL is configured\n    if (!process.env.DATABASE_URL || process.env.DATABASE_URL.includes('base') || process.env.DATABASE_URL.includes('your_database_url_here') || process.env.DATABASE_URL === 'your_database_url_here') {\n        console.warn('DATABASE_URL is not properly configured. App will run in demo mode without database.');\n        return false;\n    }\n    const client = await pool.connect();\n    try {\n        // Create categories table first (referenced by products)\n        await client.query(\"\\n      CREATE TABLE IF NOT EXISTS categories (\\n        id SERIAL PRIMARY KEY,\\n        name VARCHAR(100) NOT NULL,\\n        slug VARCHAR(100) UNIQUE NOT NULL,\\n        description TEXT,\\n        image VARCHAR(500),\\n        parent_id INTEGER REFERENCES categories(id),\\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\\n      )\\n    \");\n        // Create products table\n        await client.query(\"\\n      CREATE TABLE IF NOT EXISTS products (\\n        id SERIAL PRIMARY KEY,\\n        name VARCHAR(255) NOT NULL,\\n        description TEXT,\\n        price DECIMAL(10,2) NOT NULL,\\n        category VARCHAR(100) NOT NULL,\\n        subcategory VARCHAR(100),\\n        image VARCHAR(500),\\n        stock INTEGER DEFAULT 0,\\n        rating DECIMAL(3,2) DEFAULT 0,\\n        reviews INTEGER DEFAULT 0,\\n        featured BOOLEAN DEFAULT FALSE,\\n        tags TEXT[],\\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\\n      )\\n    \");\n        // Create indexes for better performance\n        await client.query(\"\\n      CREATE INDEX IF NOT EXISTS idx_products_category ON products(category);\\n      CREATE INDEX IF NOT EXISTS idx_products_featured ON products(featured);\\n      CREATE INDEX IF NOT EXISTS idx_products_stock ON products(stock);\\n      CREATE INDEX IF NOT EXISTS idx_orders_status ON orders(status);\\n      CREATE INDEX IF NOT EXISTS idx_orders_user_id ON orders(user_id);\\n      CREATE INDEX IF NOT EXISTS idx_orders_created_at ON orders(created_at);\\n    \");\n        // Create users table\n        await client.query(\"\\n      CREATE TABLE IF NOT EXISTS users (\\n        id SERIAL PRIMARY KEY,\\n        user_id VARCHAR(50) UNIQUE NOT NULL,\\n        name VARCHAR(255) NOT NULL,\\n        email VARCHAR(255) UNIQUE NOT NULL,\\n        phone VARCHAR(20),\\n        address TEXT,\\n        city VARCHAR(100),\\n        is_admin BOOLEAN DEFAULT FALSE,\\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\\n      )\\n    \");\n        // Create orders table with enhanced fields\n        await client.query(\"\\n      CREATE TABLE IF NOT EXISTS orders (\\n        id SERIAL PRIMARY KEY,\\n        order_id VARCHAR(50) UNIQUE NOT NULL,\\n        user_id VARCHAR(50) REFERENCES users(user_id),\\n        customer_name VARCHAR(255) NOT NULL,\\n        customer_email VARCHAR(255) NOT NULL,\\n        customer_phone VARCHAR(20) NOT NULL,\\n        address TEXT NOT NULL,\\n        city VARCHAR(100) NOT NULL,\\n        items JSONB NOT NULL,\\n        subtotal DECIMAL(10,2) NOT NULL,\\n        shipping DECIMAL(10,2) NOT NULL,\\n        vat DECIMAL(10,2) NOT NULL,\\n        total_amount DECIMAL(10,2) NOT NULL,\\n        status VARCHAR(20) DEFAULT 'pending',\\n        payment_method VARCHAR(50) NOT NULL,\\n        payment_status VARCHAR(20) DEFAULT 'pending',\\n        estimated_delivery VARCHAR(100),\\n        tracking_number VARCHAR(100),\\n        notes TEXT,\\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\\n      )\\n    \");\n        // Create order_status_history table for tracking\n        await client.query(\"\\n      CREATE TABLE IF NOT EXISTS order_status_history (\\n        id SERIAL PRIMARY KEY,\\n        order_id VARCHAR(50) REFERENCES orders(order_id),\\n        status VARCHAR(20) NOT NULL,\\n        notes TEXT,\\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\\n      )\\n    \");\n        // Create admin_users table\n        await client.query(\"\\n      CREATE TABLE IF NOT EXISTS admin_users (\\n        id SERIAL PRIMARY KEY,\\n        username VARCHAR(50) UNIQUE NOT NULL,\\n        email VARCHAR(255) UNIQUE NOT NULL,\\n        password_hash VARCHAR(255) NOT NULL,\\n        role VARCHAR(20) DEFAULT 'admin',\\n        is_active BOOLEAN DEFAULT TRUE,\\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\\n      )\\n    \");\n        // Ensure slug column exists (migration for existing tables)\n        try {\n            await client.query(\"\\n        DO $$ \\n        BEGIN \\n          IF NOT EXISTS (\\n            SELECT 1 FROM information_schema.columns \\n            WHERE table_name = 'categories' AND column_name = 'slug'\\n          ) THEN\\n            ALTER TABLE categories ADD COLUMN slug VARCHAR(100) UNIQUE;\\n          END IF;\\n        END $$;\\n      \");\n        } catch (error) {\n            console.log('Migration note: Slug column might already exist or table might be new');\n        }\n        // Insert sample data if tables are empty\n        await insertSampleData(client);\n        console.log('Database tables initialized successfully with full schema');\n        // Initialize default admin user\n        const { initializeDefaultAdmin } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./admin-auth */ \"(app-pages-browser)/./lib/admin-auth.ts\"));\n        await initializeDefaultAdmin();\n        return true;\n    } catch (error) {\n        console.error('Error initializing database:', error);\n        return false;\n    } finally{\n        client.release();\n    }\n}\n// Insert sample data for testing\nasync function insertSampleData(client) {\n    try {\n        // Check if we already have data\n        const orderCount = await client.query('SELECT COUNT(*) FROM orders');\n        if (parseInt(orderCount.rows[0].count) > 0) {\n            console.log('Sample data already exists, skipping insertion');\n            return;\n        }\n        // Insert sample categories (only if table is empty and has slug column)\n        const categoryExists = await client.query('SELECT COUNT(*) FROM categories');\n        if (parseInt(categoryExists.rows[0].count) === 0) {\n            try {\n                // Check if slug column exists before inserting\n                const columnCheck = await client.query(\"\\n          SELECT column_name FROM information_schema.columns \\n          WHERE table_name = 'categories' AND column_name = 'slug'\\n        \");\n                if (columnCheck.rows.length > 0) {\n                    await client.query(\"\\n            INSERT INTO categories (name, slug, description) VALUES\\n            ('Electronics', 'electronics', 'Latest electronic devices and gadgets'),\\n            ('Fashion', 'fashion', 'Trendy clothing and accessories'),\\n            ('Home & Living', 'home-living', 'Home decoration and living essentials'),\\n            ('Beauty', 'beauty', 'Beauty and personal care products')\\n          \");\n                } else {\n                    // Insert without slug if column doesn't exist\n                    await client.query(\"\\n            INSERT INTO categories (name, description) VALUES\\n            ('Electronics', 'Latest electronic devices and gadgets'),\\n            ('Fashion', 'Trendy clothing and accessories'),\\n            ('Home & Living', 'Home decoration and living essentials'),\\n            ('Beauty', 'Beauty and personal care products')\\n          \");\n                }\n            } catch (insertError) {\n                console.log('Note: Could not insert sample categories, table structure may be different');\n            }\n        }\n        // Insert sample products\n        await client.query(\"\\n      INSERT INTO products (name, description, price, category, image, stock, featured) VALUES\\n      ('Premium Wireless Headphones', 'High-quality wireless headphones with noise cancellation', 199.99, 'electronics', '/placeholder.svg', 50, true),\\n      ('Smart Watch Pro', 'Advanced smartwatch with health monitoring', 299.99, 'electronics', '/placeholder.svg', 30, true),\\n      ('Casual T-Shirt', 'Comfortable cotton t-shirt for everyday wear', 29.99, 'fashion', '/placeholder.svg', 100, false),\\n      ('Running Shoes', 'Professional running shoes for athletes', 129.99, 'fashion', '/placeholder.svg', 25, true),\\n      ('Samsung Galaxy S24', 'Latest Samsung flagship smartphone with advanced camera', 899.99, 'electronics', '/placeholder.svg', 20, true),\\n      ('MacBook Air M3', 'Lightweight laptop with Apple M3 chip', 1299.99, 'electronics', '/placeholder.svg', 15, true),\\n      ('Nike Air Max', 'Popular athletic shoes for running and casual wear', 149.99, 'fashion', '/placeholder.svg', 35, false),\\n      ('Levi''s Jeans', 'Classic denim jeans in various sizes', 79.99, 'fashion', '/placeholder.svg', 50, false),\\n      ('Face Cream SPF 30', 'Moisturizing face cream with sun protection', 24.99, 'beauty', '/placeholder.svg', 80, false),\\n      ('Lipstick Set', 'Set of 5 popular lipstick shades', 39.99, 'beauty', '/placeholder.svg', 60, false),\\n      ('Table Lamp', 'Modern LED table lamp for home office', 89.99, 'home-living', '/placeholder.svg', 25, false),\\n      ('Throw Pillow Set', 'Decorative pillows for living room', 49.99, 'home-living', '/placeholder.svg', 40, false)\\n      ON CONFLICT DO NOTHING\\n    \");\n        // Insert sample users\n        await client.query(\"\\n      INSERT INTO users (user_id, name, email, phone, address, city) VALUES\\n      ('user_1', 'John Doe', 'john@example.com', '01700000000', '123 Main St', 'Dhaka'),\\n      ('user_2', 'Jane Smith', 'jane@example.com', '01800000000', '456 Oak Ave', 'Chittagong')\\n      ON CONFLICT (user_id) DO NOTHING\\n    \");\n        // Insert sample orders\n        await client.query(\"\\n      INSERT INTO orders (order_id, user_id, customer_name, customer_email, customer_phone, address, city, items, subtotal, shipping, vat, total_amount, status, payment_method, estimated_delivery, tracking_number) VALUES\\n      ('HS-1234567890', 'user_1', 'John Doe', 'john@example.com', '01700000000', '123 Main St', 'Dhaka', '[{\\\"id\\\":\\\"1\\\",\\\"name\\\":\\\"Premium Wireless Headphones\\\",\\\"price\\\":199.99,\\\"quantity\\\":1,\\\"image\\\":\\\"/placeholder.svg\\\"}]', 199.99, 120.00, 31.99, 351.98, 'shipped', 'Cash on Delivery', '2-3 business days', 'TRK-123456789'),\\n      ('HS-0987654321', 'user_2', 'Jane Smith', 'jane@example.com', '01800000000', '456 Oak Ave', 'Chittagong', '[{\\\"id\\\":\\\"2\\\",\\\"name\\\":\\\"Smart Watch Pro\\\",\\\"price\\\":299.99,\\\"quantity\\\":1,\\\"image\\\":\\\"/placeholder.svg\\\"}]', 299.99, 120.00, 41.99, 461.98, 'processing', 'Cash on Delivery', '3-4 business days', 'TRK-987654321'),\\n      ('HS-1122334455', 'user_1', 'John Doe', 'john@example.com', '01700000000', '123 Main St', 'Dhaka', '[{\\\"id\\\":\\\"3\\\",\\\"name\\\":\\\"Casual T-Shirt\\\",\\\"price\\\":29.99,\\\"quantity\\\":2,\\\"image\\\":\\\"/placeholder.svg\\\"}]', 59.98, 120.00, 9.60, 189.58, 'delivered', 'Cash on Delivery', '1-2 business days', 'TRK-112233445')\\n      ON CONFLICT (order_id) DO NOTHING\\n    \");\n        // Insert order status history\n        await client.query(\"\\n      INSERT INTO order_status_history (order_id, status, notes) VALUES\\n      ('HS-1234567890', 'pending', 'Order placed successfully'),\\n      ('HS-1234567890', 'processing', 'Order is being prepared'),\\n      ('HS-1234567890', 'shipped', 'Order has been shipped'),\\n      ('HS-0987654321', 'pending', 'Order placed successfully'),\\n      ('HS-0987654321', 'processing', 'Order is being prepared'),\\n      ('HS-1122334455', 'pending', 'Order placed successfully'),\\n      ('HS-1122334455', 'processing', 'Order is being prepared'),\\n      ('HS-1122334455', 'shipped', 'Order has been shipped'),\\n      ('HS-1122334455', 'delivered', 'Order delivered successfully')\\n    \");\n        console.log('Sample data inserted successfully');\n    } catch (error) {\n        console.error('Error inserting sample data:', error);\n    }\n}\n// Helper function to execute queries safely\nasync function executeQuery(text, params) {\n    const client = await pool.connect();\n    try {\n        const result = await client.query(text, params);\n        return result;\n    } finally{\n        client.release();\n    }\n}\n// Update order status with history tracking\nasync function updateOrderStatus(orderId, newStatus, notes) {\n    const client = await pool.connect();\n    try {\n        await client.query('BEGIN');\n        // Update order status\n        await client.query('UPDATE orders SET status = $1, updated_at = CURRENT_TIMESTAMP WHERE order_id = $2', [\n            newStatus,\n            orderId\n        ]);\n        // Add to status history\n        await client.query('INSERT INTO order_status_history (order_id, status, notes) VALUES ($1, $2, $3)', [\n            orderId,\n            newStatus,\n            notes || \"Status changed to \".concat(newStatus)\n        ]);\n        await client.query('COMMIT');\n        return true;\n    } catch (error) {\n        await client.query('ROLLBACK');\n        console.error('Error updating order status:', error);\n        return false;\n    } finally{\n        client.release();\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/database.ts\n"));

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["vendors-node_modules_pnpm_bcryptjs_3_0_2_node_modules_bcryptjs_index_js-320d5476","vendors-node_modules_pnpm_c","vendors-node_modules_pnpm_next-","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-c3c3ec1f","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-927294ee","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-3e5282eb","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-fc882793","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-dafbd1cb","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-1b7f6e76","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-f1f5beb1","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-596e9653","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-d8a1ef33","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-f17cede7","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-2a080867","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-59a4d1be","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-7fd65d4c","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-a21c969c","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-1c551f13","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-1239076c","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-8ba99c77","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-78cc1e76","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-5f9a5061","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-60389bef","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-9fc2692f","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-0124d0ae","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-a0e752e7","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-ceb8029e","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-1c7d25b7","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-9db79dce","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-4b6451ff","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-60fa4780","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-0c469ede","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-10e69fb3","vendors-node_modules_pnpm_next_15_2_4_react-dom_19_0_0_react_19_0_0__react_19_0_0_node_modules_next_-d5c1dd7d","vendors-node_modules_pnpm_pg-c","vendors-node_modules_pnpm_p","vendors-node_modules_pnpm_s","default-_app-pages-browser_components_cart-provider_tsx-_app-pages-browser_components_ui_butt-faedeb","app/layout-_","app/layout-a","main-app"], () => (__webpack_exec__("(app-pages-browser)/./node_modules/.pnpm/next@15.2.4_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fcomponents%2Fadmin-auth-provider.tsx%22%2C%22ids%22%3A%5B%22AdminAuthProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fcomponents%2Fai-chat-assistant.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fcomponents%2Fauth-provider.tsx%22%2C%22ids%22%3A%5B%22AuthProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fcomponents%2Fcart-provider.tsx%22%2C%22ids%22%3A%5B%22CartProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fcomponents%2Fnavbar.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fcomponents%2Freal-time-notifications.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fcomponents%2Ftheme-provider.tsx%22%2C%22ids%22%3A%5B%22ThemeProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fcomponents%2Fui%2Ftoaster.tsx%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fcomponents%2Fwishlist-provider.tsx%22%2C%22ids%22%3A%5B%22WishlistProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fnode_modules%2F.pnpm%2Fnext%4015.2.4_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fapp-dir%2Flink.js%22%2C%22ids%22%3A%5B%22__esModule%22%2C%22default%22%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Frunner%2Fworkspace%2Fnode_modules%2F.pnpm%2Fnext%4015.2.4_react-dom%4019.0.0_react%4019.0.0__react%4019.0.0%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&server=false!")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);